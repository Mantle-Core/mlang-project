//======================================================
//
// x-macro header, we do this to write once use everywhere
//
//======================================================
//
// X-macros are a technique in C/C++ programming that use macros to generate repetitive code.
// This approach involves defining a list of macro invocations that are included wherever needed.
//
// We define our x-macros as so:
// 
// MANTLE_TOKEN(name)
// 
// The MANTLE_TOKEN macro is used as a placeholder that can be defined differently depending on the context.
// This way, we can declare all our tokens once and reuse this list in various parts of our codebase,
// such as in token definitions, debugging output, and more.
//
// Below are the different categories of tokens defined using this technique:
//
#ifndef MANTLE_TOKEN
#define MANTLE_TOKEN(name)
#endif

#ifndef MANTLE_SYMBOL_COMPARISON_TOKEN
#define MANTLE_SYMBOL_COMPARISON_TOKEN(Name, Spelling) MANTLE_TOKEN(Name)
#endif

MANTLE_SYMBOL_COMPARISON_TOKEN(Less, "<")
MANTLE_SYMBOL_COMPARISON_TOKEN(Greater, ">")
MANTLE_SYMBOL_COMPARISON_TOKEN(LessEqual, "<=")
MANTLE_SYMBOL_COMPARISON_TOKEN(GreaterEqual, ">=")
MANTLE_SYMBOL_COMPARISON_TOKEN(EqualEqual, "==")
MANTLE_SYMBOL_COMPARISON_TOKEN(ExclaimEqual, "!=")

#undef MANTLE_SYMBOL_COMPARISON_TOKEN

#ifndef MANTLE_SYMBOL_OPERATOR_TOKEN
#define MANTLE_SYMBOL_OPERATOR_TOKEN(Name, Spelling) MANTLE_TOKEN(Name)
#endif

MANTLE_SYMBOL_OPERATOR_TOKEN(Plus, "+")
MANTLE_SYMBOL_OPERATOR_TOKEN(PlusPlus, "++")
MANTLE_SYMBOL_OPERATOR_TOKEN(Minus, "-")
MANTLE_SYMBOL_OPERATOR_TOKEN(MinusMinus, "--")
MANTLE_SYMBOL_OPERATOR_TOKEN(Slash, "/")
MANTLE_SYMBOL_OPERATOR_TOKEN(Percent, "%")

#undef MANTLE_SYMBOL_OPERATOR_TOKEN

#ifndef MANTLE_SYMBOL_BITWISE_TOKEN
#define MANTLE_SYMBOL_BITWISE_TOKEN(Name, Spelling) MANTLE_TOKEN(Name)
#endif

MANTLE_SYMBOL_BITWISE_TOKEN(LessLess, "<<")
MANTLE_SYMBOL_BITWISE_TOKEN(GreaterGreater, ">>")
MANTLE_SYMBOL_BITWISE_TOKEN(Tilde, "~")
MANTLE_SYMBOL_BITWISE_TOKEN(Caret, "^")
MANTLE_SYMBOL_BITWISE_TOKEN(Pipe, "|")

#undef MANTLE_SYMBOL_BITWISE_TOKEN

#ifndef MANTLE_SYMBOL_ASSIGNMENT_TOKEN
#define MANTLE_SYMBOL_ASSIGNMENT_TOKEN(Name, Spelling) MANTLE_TOKEN(Name)
#endif

MANTLE_SYMBOL_ASSIGNMENT_TOKEN(Equal, "=")
MANTLE_SYMBOL_ASSIGNMENT_TOKEN(StarEqual, "*=")
MANTLE_SYMBOL_ASSIGNMENT_TOKEN(SlashEqual, "/=")
MANTLE_SYMBOL_ASSIGNMENT_TOKEN(PercentEqual, "%=")
MANTLE_SYMBOL_ASSIGNMENT_TOKEN(PlusEqual, "+=")
MANTLE_SYMBOL_ASSIGNMENT_TOKEN(MinusEqual, "-=")
MANTLE_SYMBOL_ASSIGNMENT_TOKEN(LessLessEqual, "<<=")
MANTLE_SYMBOL_ASSIGNMENT_TOKEN(GreaterGreaterEqual, ">>=")
MANTLE_SYMBOL_ASSIGNMENT_TOKEN(PipeEqual, "|=")
MANTLE_SYMBOL_ASSIGNMENT_TOKEN(AmpersandEqual, "&=")

#undef MANTLE_SYMBOL_ASSIGNMENT_TOKEN

#ifndef MANTLE_SYMBOL_SCOPE_TOKEN
#define MANTLE_SYMBOL_SCOPE_TOKEN(Name, Spelling) MANTLE_TOKEN(Name)
#endif

MANTLE_SYMBOL_SCOPE_TOKEN(ColonColon, "::")
MANTLE_SYMBOL_SCOPE_TOKEN(OpenSquareBracket, "[")
MANTLE_SYMBOL_SCOPE_TOKEN(CloseSquareBracket, "]")
MANTLE_SYMBOL_SCOPE_TOKEN(OpenParentheses, "(")
MANTLE_SYMBOL_SCOPE_TOKEN(CloseParentheses, ")")
MANTLE_SYMBOL_SCOPE_TOKEN(OpenCurlyBracket, "{")
MANTLE_SYMBOL_SCOPE_TOKEN(CloseCurlyBracket, "}")

#undef MANTLE_SYMBOL_SCOPE_TOKEN

#ifndef MANTLE_SYMBOL_PUNCTUATOR_TOKEN
#define MANTLE_SYMBOL_PUNCTUATOR_TOKEN(Name, Spelling) MANTLE_TOKEN(Name)
#endif

MANTLE_SYMBOL_PUNCTUATOR_TOKEN(QuestionMark, "?")
MANTLE_SYMBOL_PUNCTUATOR_TOKEN(Colon, ":")
MANTLE_SYMBOL_PUNCTUATOR_TOKEN(Comma, ",")
MANTLE_SYMBOL_PUNCTUATOR_TOKEN(Dot, ".")
MANTLE_SYMBOL_PUNCTUATOR_TOKEN(SemiColon, ";")

#undef MANTLE_SYMBOL_PUNCTUATOR_TOKEN

#ifndef MANTLE_SYMBOL_TOKEN
#define MANTLE_SYMBOL_TOKEN(Name, Spelling) MANTLE_TOKEN(Name)
#endif

MANTLE_SYMBOL_TOKEN(Star, "*")
MANTLE_SYMBOL_TOKEN(MinusGreater, "->")
MANTLE_SYMBOL_TOKEN(Ampersand, "&")
MANTLE_SYMBOL_TOKEN(AmpersandAmpersand, "&&")

#undef MANTLE_SYMBOL_TOKEN

#ifndef MANTLE_KEYWORD_DATA_TYPE_TOKEN
#define MANTLE_KEYWORD_DATA_TYPE_TOKEN(Name, Spelling) MANTLE_TOKEN(Name)
#endif

MANTLE_KEYWORD_DATA_TYPE_TOKEN(S8, "s8")
MANTLE_KEYWORD_DATA_TYPE_TOKEN(S16, "s16")
MANTLE_KEYWORD_DATA_TYPE_TOKEN(S32, "s32")
MANTLE_KEYWORD_DATA_TYPE_TOKEN(S64, "s64")
MANTLE_KEYWORD_DATA_TYPE_TOKEN(S128, "s128")
MANTLE_KEYWORD_DATA_TYPE_TOKEN(U8, "u8")
MANTLE_KEYWORD_DATA_TYPE_TOKEN(U16, "u16")
MANTLE_KEYWORD_DATA_TYPE_TOKEN(U32, "u32")
MANTLE_KEYWORD_DATA_TYPE_TOKEN(U64, "u64")
MANTLE_KEYWORD_DATA_TYPE_TOKEN(u128, "u128")
MANTLE_KEYWORD_DATA_TYPE_TOKEN(F32, "f32")
MANTLE_KEYWORD_DATA_TYPE_TOKEN(F64, "f64")
MANTLE_KEYWORD_DATA_TYPE_TOKEN(F128, "f128")
MANTLE_KEYWORD_DATA_TYPE_TOKEN(String, "string")
MANTLE_KEYWORD_DATA_TYPE_TOKEN(Bool, "bool")

#undef MANTLE_KEYWORD_DATA_TYPE_TOKEN

#ifndef MANTLE_KEYWORD_CONTROL_FLOW_TOKEN
#define MANTLE_KEYWORD_CONTROL_FLOW_TOKEN(Name, Spelling) MANTLE_TOKEN(Name)
#endif

MANTLE_KEYWORD_CONTROL_FLOW_TOKEN(Extern, "extern")
MANTLE_KEYWORD_CONTROL_FLOW_TOKEN(Break, "break")
MANTLE_KEYWORD_CONTROL_FLOW_TOKEN(Case, "case")
MANTLE_KEYWORD_CONTROL_FLOW_TOKEN(Switch, "switch")
MANTLE_KEYWORD_CONTROL_FLOW_TOKEN(Default, "default")
MANTLE_KEYWORD_CONTROL_FLOW_TOKEN(Do, "do")
MANTLE_KEYWORD_CONTROL_FLOW_TOKEN(While, "while")
MANTLE_KEYWORD_CONTROL_FLOW_TOKEN(Skip, "skip")
MANTLE_KEYWORD_CONTROL_FLOW_TOKEN(For, "for")
MANTLE_KEYWORD_CONTROL_FLOW_TOKEN(If, "if")
MANTLE_KEYWORD_CONTROL_FLOW_TOKEN(Guard, "guard")
MANTLE_KEYWORD_CONTROL_FLOW_TOKEN(Else, "else")
MANTLE_KEYWORD_CONTROL_FLOW_TOKEN(Return, "return")
MANTLE_KEYWORD_CONTROL_FLOW_TOKEN(Try, "try")
MANTLE_KEYWORD_CONTROL_FLOW_TOKEN(Throw, "throw")
MANTLE_KEYWORD_CONTROL_FLOW_TOKEN(Or, "or")
MANTLE_KEYWORD_CONTROL_FLOW_TOKEN(And, "and")

#undef MANTLE_KEYWORD_CONTROL_FLOW_TOKEN

#ifndef MANTLE_KEYWORD_DATA_STRUCTURE_TOKEN
#define MANTLE_KEYWORD_DATA_STRUCTURE_TOKEN(Name, Spelling) MANTLE_TOKEN(Name)
#endif

MANTLE_KEYWORD_DATA_STRUCTURE_TOKEN(Component, "component")
MANTLE_KEYWORD_DATA_STRUCTURE_TOKEN(Blueprint, "blueprint")
MANTLE_KEYWORD_DATA_STRUCTURE_TOKEN(Extension, "extension")
MANTLE_KEYWORD_DATA_STRUCTURE_TOKEN(Struct, "struct")
MANTLE_KEYWORD_DATA_STRUCTURE_TOKEN(System, "system")
MANTLE_KEYWORD_DATA_STRUCTURE_TOKEN(Enum, "enum")
MANTLE_KEYWORD_DATA_STRUCTURE_TOKEN(Union, "union")

#undef MANTLE_KEYWORD_DATA_STRUCTURE_TOKEN

#ifndef MANTLE_KEYWORD_FILES_TOKEN
#define MANTLE_KEYWORD_FILES_TOKEN(Name, Spelling) MANTLE_TOKEN(Name)
#endif

MANTLE_KEYWORD_FILES_TOKEN(Module, "module")
MANTLE_KEYWORD_FILES_TOKEN(Import, "import")

#undef MANTLE_KEYWORD_FILES_TOKEN

#ifndef MANTLE_KEYWORD_DECLARATION_TOKEN
#define MANTLE_KEYWORD_DECLARATION_TOKEN(Name, Spelling) MANTLE_TOKEN(Name)
#endif

MANTLE_KEYWORD_DECLARATION_TOKEN(Unique, "unique")
MANTLE_KEYWORD_DECLARATION_TOKEN(Readonly, "readonly")
MANTLE_KEYWORD_DECLARATION_TOKEN(Function, "function")
MANTLE_KEYWORD_DECLARATION_TOKEN(Macro, "macro")
MANTLE_KEYWORD_DECLARATION_TOKEN(Typealias, "typealias")
MANTLE_KEYWORD_DECLARATION_TOKEN(Inline, "inline")
MANTLE_KEYWORD_DECLARATION_TOKEN(Constexpr, "constexpr")

#undef MANTLE_KEYWORD_DECLARATION_TOKEN

#ifndef MANTLE_KEYWORD_BOOLEAN_TOKEN
#define MANTLE_KEYWORD_BOOLEAN_TOKEN(Name, Spelling) MANTLE_TOKEN(Name)
#endif

MANTLE_KEYWORD_BOOLEAN_TOKEN(True, "true")
MANTLE_KEYWORD_BOOLEAN_TOKEN(False, "false")

#undef MANTLE_KEYWORD_BOOLEAN_TOKEN

#ifndef MANTLE_KEYWORD_OTHER_TOKEN
#define MANTLE_KEYWORD_OTHER_TOKEN(Name, Spelling) MANTLE_TOKEN(Name)
#endif

MANTLE_KEYWORD_OTHER_TOKEN(Sizeof, "sizeof")
MANTLE_KEYWORD_OTHER_TOKEN(Nullptr, "nullptr")

#undef MANTLE_KEYWORD_OTHER_TOKEN

#ifndef MANTLE_KEYWORD_RESERVED_TOKEN
#define MANTLE_KEYWORD_RESERVED_TOKEN(Name, Spelling) MANTLE_TOKEN(Name)
#endif

MANTLE_KEYWORD_RESERVED_TOKEN(AlignAs, "alignas")
MANTLE_KEYWORD_RESERVED_TOKEN(AlignOf, "alignof")
MANTLE_KEYWORD_RESERVED_TOKEN(Atomic, "atomic")
MANTLE_KEYWORD_RESERVED_TOKEN(Complex, "complex")
MANTLE_KEYWORD_RESERVED_TOKEN(Imaginary, "imaginary")
MANTLE_KEYWORD_RESERVED_TOKEN(NoReturn, "noreturn")
MANTLE_KEYWORD_RESERVED_TOKEN(StaticAssert, "staticassert")
MANTLE_KEYWORD_RESERVED_TOKEN(ThreadLocal, "threadlocal")

#undef MANTLE_KEYWORD_RESERVED_TOKEN

MANTLE_TOKEN(Unidentified)
MANTLE_TOKEN(StartOfFile)
MANTLE_TOKEN(EndOfFile)
MANTLE_TOKEN(Identifier)
MANTLE_TOKEN(IntegerLiteral)
MANTLE_TOKEN(StringLiteral)
MANTLE_TOKEN(RealLiteral)

#undef MANTLE_TOKEN
